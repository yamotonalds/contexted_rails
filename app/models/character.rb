# キャラクタークラス
# キャラクターが絡まない処理は無いくらいいろんな機能で使われるはず
# そのまま各機能用の属性やメソッドを生やしてたらFatになりすぎてギネスに載るレベル
# しかし各機能ごとにそれらすべての属性・メソッドを使うわけも無く、各機能はそれぞれ
# キャラクターのある側面だけを見るはず
# 例えば、見た目装備に関するコンテキストではキャラクターが現在装備しているアイテムや
# 所持しているアイテムに関心はあるが、キャラクターがどのクランに所属しているか、や
# キャラクターの最終ログイン日時には興味が無いはず
# よって、一口にキャラクターと言っても各コンテキストごとにそこで必要なものだけを持った
# そのコンテキスト専用のキャラクターモデルを作れば良い
# 
# このモデルはキャラクターの核を表す
# キャラクターの存在を示すだけなので、極論すればIDだけ持っていればいい
# （実際にはキャラクター名とか基本的な情報は多数のコンテキストで使うので
# ここに持たせてしまって良いと思う。でもAPIならキャラクター名はあまり使わないかもだし
# その辺は作るもの次第かも）
# このモデルが余計なものを持つと生成が大変だったり無駄が多かったりするので
# 極力薄くすべき
#
# 各コンテキストのモデルと区別するためと全体で使うことを表すため、moduleを使ってないが
# ShareとかBasicみたいなmoduleに入れるのもありっちゃあり
class Character < ActiveRecord::Base
end
